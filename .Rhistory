library(intraDay)
library(intraDay)
cat_function()
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-'HAPPY VALLEY'
meetingid<-meeting::retrieve_meeting_id(date,animal,race)
meetingid
events<-event::retrieve_events(meetingid)
events<-events::retrieve_events(meetingid)
events$MeetingID<-meetingid
events$Status<-mapply(events::event_status,events$EventID)
events<-events[events$Status=="FINAL",]
events
events$Fields<-fields<-mapply(retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
events$Fields<-fields<-mapply(events::retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
library(intraDay)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-'HAPPY VALLEY'
meetingid<-meeting::retrieve_meeting_id(date,animal,race)
events<-events::retrieve_events(meetingid)
events$MeetingID<-meetingid
events$Status<-mapply(events::event_status,events$EventID)
events<-events[events$Status=="FINAL",]
events$Fields<-fields<-mapply(retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
events$Fields<-fields<-mapply(events::retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-'HAPPY VALLEY'
meetingid<-meeting::retrieve_meeting_id(date,animal,race)
events<-events::retrieve_events(meetingid)
events$MeetingID<-meetingid
events$Status<-mapply(events::event_status,events$EventID)
events<-events[events$Status=="FINAL",]
events$Fields<-fields<-mapply(events::retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-'HAPPY VALLEY'
meetingid<-meeting::retrieve_meeting_id(date,animal,race)
events<-events::retrieve_events(meetingid)
events$MeetingID<-meetingid
events$Status<-mapply(events::event_status,events$EventID)
events<-events[events$Status=="FINAL",]
events$Fields<-fields<-mapply(events::retrieve_field,events$EventID)-mapply(competitor::scratched,events$EventID)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-'HAPPY VALLEY'
meetingid<-meeting::retrieve_meeting_id(date,animal,race)
events<-events::retrieve_events(meetingid)
events$MeetingID<-meetingid
events$Status<-mapply(events::event_status,events$EventID)
events<-events[events$Status=="FINAL",]
events$Fields<-fields<-mapply(events::retrieve_field,events$EventID)-mapply(competitor::scratchings,events$EventID)
events$Race<-mapply(event::retrieve_races,events$MeetingID,events$EventID)
events$Race<-mapply(events::retrieve_races,events$MeetingID,events$EventID)
events<-events[order(events$Race),]
events
races<-events[!duplicated(events[c("MeetingID","Race")]),c("MeetingID","Race")]
races
dat<-as.data.frame(matrix(NA,sum(fields),9))
dat
colnames(dat)<-c('Course','CompID','Matrix','Race','MeetingID','Odds','EventID','Distance','FP')
for(i in 1:nrow(races)){
end<-sum(events$Fields[1:i])
if(i==1) start<-1
else start<-sum(events$Fields[1:(i-1)])+1
a<-master_collate(date,animal,events$Race[i],meetingid)
dat[start:end,]<-a
flush.console()
}
dat<-dat[is.finite(dat$Race),]
meetingid = 109501
events<-events::retrieve_events(meetingid)
meet.l<-rep(meetingid,length(events$EventID))
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
runners<-events::retrieve_runners(race,meetingid)
runners<-events::retrieve_runners(race,meetingid)
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
runners<-events::retrieve_runners(1,meetingid)
race=1
runners$EventID<-events$EventID[events$race==race]
events
runners
events<-events::retrieve_events(meetingId)
meet.l<-rep(meetingId,length(events$EventID))
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
runners<-events::retrieve_runners(race,meetingId)
meetingId = 109501
events<-events::retrieve_events(meetingId)
meet.l<-rep(meetingId,length(events$EventID))
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
runners<-events::retrieve_runners(race,meetingId)
runners
runners$EventID<-events$EventID[events$race==race]
events$EventID
events$EventID[events$race=1]
events$EventID[events$race==1]
events$race
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-1
events<-events::retrieve_events(meetingId)
events
meet.l<-rep(meetingId,length(events$EventID))
meet.l
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
events$race
runners<-events::retrieve_runners(race,meetingId)
runners
events$race<-mapply(events::retrieve_races,meetingId,events$EventID)
events$race
events$race$0
events$race$1
cat(events$race$1,'\n')
cat(events$race,'\n')
jsonlite::toJSON(events$race)
meetingId
events::retrieve_races(109501,109501)
events::retrieve_races(109501,1175769)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-1
meetingId<-109501
events<-events::retrieve_events(meetingId)
meet.l<-rep(meetingId,length(events$EventID))
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
events$race
runners<-events::retrieve_runners(race,meetingId)
runners$EventID<-events$EventID[events$race==race]
runners$EventID
runners$Matrix<-mapply(market::retrieve_competitor_matrix_value,runners$Race,runners$meetingId,runners$CompID)
runners$Race
runners$MeetingID
runners$Matrix<-mapply(market::retrieve_competitor_matrix_value,runners$Race,runners$MeetingID,runners$CompID)
runners$Odds<-market::retrieve_prices(race,meetingId)
runners$Odds
runners$Date<-date
runners$Animal<-animal
runners$Course<-toupper(mapply(meeting::retrieve_course,runners$Date,runners$Animal,runners$MeetingID))
runners$Course
runners$Distance<-mapply(events::event_distance,runners$EventID)
runners$Distance
runners$FP<-mapply(competitor::finish_position,runners$MeetingID,runners$EventID,runners$CompID)
library(intraDay)
date<-'2016-10-26'
animal<-'THOROUGHBRED'
race<-1
events<-events::retrieve_events(meetingId)
meet.l<-rep(meetingId,length(events$EventID))
events$race<-mapply(events::retrieve_races,meet.l,events$EventID)
runners<-events::retrieve_runners(race,meetingId)
runners$EventID<-events$EventID[events$race==race]
runners$Matrix<-mapply(market::retrieve_competitor_matrix_value,runners$Race,runners$MeetingID,runners$CompID)
runners$Odds<-market::retrieve_prices(race,meetingId)
runners$Date<-date
runners$Animal<-animal
runners$Course<-toupper(mapply(meeting::retrieve_course,runners$Date,runners$Animal,runners$MeetingID))
runners$Distance<-mapply(events::event_distance,runners$EventID)
runners$FP<-mapply(competitor::finish_position,runners$EventID,runners$CompID)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
packrat::init(options = list(local.repos = c("~/foobar/events", "~/foobar/competitor", "~/foobar/market", "~/foobar/meeting")))
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library("packrat", lib.loc="~/foobar/intraDay/packrat/lib/x86_64-pc-linux-gnu/3.3.1")
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
packrat::set_opts(local.repos = c("~/foobar"))
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
packrat::set_opts(external.packages = c("meeting"))
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
packrat::set_opts(external.packages = c("meeting", "events", "market", "compeitor", "jsonlite"))
packrat::set_opts(external.packages = c("meeting", "events", "market", "competitor", "jsonlite"))
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
packrat::set_opts(external.packages = c("meeting", "events", "market", "competitor", "jsonlite", "curl"))
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
library(intraDay)
main('2016-10-26','THOROUGHBRED','HAPPY VALLEY')
